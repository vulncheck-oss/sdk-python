# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.params_idx_req_params import ParamsIdxReqParams

class TestParamsIdxReqParams(unittest.TestCase):
    """ParamsIdxReqParams unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ParamsIdxReqParams:
        """Test ParamsIdxReqParams
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ParamsIdxReqParams`
        """
        model = ParamsIdxReqParams()
        if include_optional:
            return ParamsIdxReqParams(
                alias = '',
                asn = '',
                botnet_name = '',
                cidr = '',
                country = '',
                country_code = '',
                cve = '',
                hostname = '',
                iava = '',
                ilvn = '',
                jvndb = '',
                limit = '',
                matches = '',
                misp_id = '',
                mitre_id = '',
                order = 'asc',
                published = '',
                published_end = '',
                published_start = '',
                ransomware_family_name = '',
                sort = '_timestamp',
                threat_actor_name = '',
                type_id = '',
                type_kind = '',
                updated_end = '',
                updated_start = ''
            )
        else:
            return ParamsIdxReqParams(
        )
        """

    def testParamsIdxReqParams(self):
        """Test ParamsIdxReqParams"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
