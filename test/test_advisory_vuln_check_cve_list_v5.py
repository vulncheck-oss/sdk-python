# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_vuln_check_cve_list_v5 import AdvisoryVulnCheckCVEListV5

class TestAdvisoryVulnCheckCVEListV5(unittest.TestCase):
    """AdvisoryVulnCheckCVEListV5 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryVulnCheckCVEListV5:
        """Test AdvisoryVulnCheckCVEListV5
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryVulnCheckCVEListV5`
        """
        model = AdvisoryVulnCheckCVEListV5()
        if include_optional:
            return AdvisoryVulnCheckCVEListV5(
                cve = [
                    ''
                    ],
                date_added = '',
                mitre_ref = vulncheck_sdk.models.advisory/mitre_cve_list_v5_ref.advisory.MitreCVEListV5Ref(
                    containers = vulncheck_sdk.models.advisory/m_containers.advisory.MContainers(
                        adp = [
                            vulncheck_sdk.models.advisory/adp_container.advisory.ADPContainer(
                                affected = [
                                    vulncheck_sdk.models.advisory/m_affected.advisory.MAffected(
                                        cpes = [
                                            ''
                                            ], 
                                        platforms = [
                                            ''
                                            ], 
                                        product = '', 
                                        vendor = '', 
                                        versions = [
                                            vulncheck_sdk.models.advisory/m_version.advisory.MVersion(
                                                less_than = '', 
                                                less_than_or_equal = '', 
                                                status = '', 
                                                version = '', 
                                                version_type = '', )
                                            ], )
                                    ], 
                                date_public = '', 
                                descriptions = [
                                    vulncheck_sdk.models.advisory/m_descriptions.advisory.MDescriptions(
                                        lang = '', 
                                        value = '', )
                                    ], 
                                impacts = [
                                    vulncheck_sdk.models.advisory/impact.advisory.Impact(
                                        capec_id = '', )
                                    ], 
                                metrics = [
                                    vulncheck_sdk.models.advisory/metric.advisory.Metric(
                                        cvss_v2_0 = vulncheck_sdk.models.advisory/m_cvss_v20.advisory.MCvssV20(
                                            base_score = 1.337, 
                                            vector_string = '', 
                                            version = '', ), 
                                        cvss_v3_0 = vulncheck_sdk.models.advisory/m_cvss_v30.advisory.MCvssV30(
                                            base_score = 1.337, 
                                            base_severity = '', 
                                            vector_string = '', 
                                            version = '', ), 
                                        cvss_v3_1 = vulncheck_sdk.models.advisory/m_cvss_v31.advisory.MCvssV31(
                                            base_score = 1.337, 
                                            base_severity = '', 
                                            vector_string = '', 
                                            version = '', ), 
                                        cvss_v4_0 = vulncheck_sdk.models.advisory/m_cvss_v40.advisory.MCvssV40(
                                            base_score = 1.337, 
                                            vector_string = '', 
                                            version = '', ), 
                                        format = '', 
                                        other = vulncheck_sdk.models.advisory/metrics_other.advisory.MetricsOther(
                                            content = '', 
                                            type = '', ), )
                                    ], 
                                problem_types = [
                                    vulncheck_sdk.models.advisory/m_problem_types.advisory.MProblemTypes()
                                    ], 
                                provider_metadata = vulncheck_sdk.models.provider_metadata.providerMetadata(), 
                                references = [
                                    vulncheck_sdk.models.advisory/m_reference.advisory.MReference(
                                        name = '', 
                                        tags = [
                                            ''
                                            ], 
                                        url = '', )
                                    ], 
                                tags = [
                                    ''
                                    ], 
                                title = '', )
                            ], 
                        cna = vulncheck_sdk.models.advisory/m_cna.advisory.MCna(
                            credits = [
                                vulncheck_sdk.models.advisory/credit.advisory.Credit(
                                    lang = '', 
                                    type = '', 
                                    value = '', )
                                ], 
                            provider_metadata = vulncheck_sdk.models.advisory/m_provider_metadata.advisory.MProviderMetadata(
                                date_updated = '', 
                                org_id = '', 
                                short_name = '', ), 
                            timeline = [
                                vulncheck_sdk.models.advisory/timeline.advisory.Timeline(
                                    lang = '', 
                                    time = '', 
                                    value = '', )
                                ], 
                            title = '', ), ), 
                    cve_metadata = vulncheck_sdk.models.advisory/m_cve_metadata.advisory.MCveMetadata(
                        assigner_org_id = '', 
                        assigner_short_name = '', 
                        cve_id = '', 
                        date_published = '', 
                        date_reserved = '', 
                        date_updated = '', 
                        state = '', ), 
                    data_type = '', 
                    data_version = '', ),
                summary = '',
                title = '',
                url = ''
            )
        else:
            return AdvisoryVulnCheckCVEListV5(
        )
        """

    def testAdvisoryVulnCheckCVEListV5(self):
        """Test AdvisoryVulnCheckCVEListV5"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
