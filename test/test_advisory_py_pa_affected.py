# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_py_pa_affected import AdvisoryPyPAAffected

class TestAdvisoryPyPAAffected(unittest.TestCase):
    """AdvisoryPyPAAffected unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryPyPAAffected:
        """Test AdvisoryPyPAAffected
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryPyPAAffected`
        """
        model = AdvisoryPyPAAffected()
        if include_optional:
            return AdvisoryPyPAAffected(
                package = vulncheck_sdk.models.advisory/py_pa_package.advisory.PyPAPackage(
                    ecosystem = '', 
                    name = '', 
                    purl = '', ),
                ranges = [
                    vulncheck_sdk.models.advisory/py_pa_range.advisory.PyPARange(
                        events = [
                            vulncheck_sdk.models.advisory/py_pa_event.advisory.PyPAEvent(
                                fixed = '', 
                                introduced = '', )
                            ], 
                        ranges_type = '', )
                    ],
                versions = [
                    ''
                    ]
            )
        else:
            return AdvisoryPyPAAffected(
        )
        """

    def testAdvisoryPyPAAffected(self):
        """Test AdvisoryPyPAAffected"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
