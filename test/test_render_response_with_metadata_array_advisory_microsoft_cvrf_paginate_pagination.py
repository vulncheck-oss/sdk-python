# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.render_response_with_metadata_array_advisory_microsoft_cvrf_paginate_pagination import RenderResponseWithMetadataArrayAdvisoryMicrosoftCVRFPaginatePagination

class TestRenderResponseWithMetadataArrayAdvisoryMicrosoftCVRFPaginatePagination(unittest.TestCase):
    """RenderResponseWithMetadataArrayAdvisoryMicrosoftCVRFPaginatePagination unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RenderResponseWithMetadataArrayAdvisoryMicrosoftCVRFPaginatePagination:
        """Test RenderResponseWithMetadataArrayAdvisoryMicrosoftCVRFPaginatePagination
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RenderResponseWithMetadataArrayAdvisoryMicrosoftCVRFPaginatePagination`
        """
        model = RenderResponseWithMetadataArrayAdvisoryMicrosoftCVRFPaginatePagination()
        if include_optional:
            return RenderResponseWithMetadataArrayAdvisoryMicrosoftCVRFPaginatePagination(
                benchmark = 1.337,
                meta = vulncheck_sdk.models.paginate/pagination.paginate.Pagination(
                    cursor = '', 
                    first_item = 56, 
                    index = '', 
                    last_item = 56, 
                    limit = 56, 
                    matches = [
                        vulncheck_sdk.models.paginate/match.paginate.Match(
                            field = '', 
                            value = '', )
                        ], 
                    max_pages = 56, 
                    next_cursor = '', 
                    opensearch_query = vulncheck_sdk.models.opensearch_query.opensearch_query(), 
                    order = '', 
                    page = 56, 
                    pages = [
                        ''
                        ], 
                    parameters = [
                        vulncheck_sdk.models.paginate/param.paginate.Param(
                            filtering = '', 
                            format = '', 
                            name = '', )
                        ], 
                    show_pages = True, 
                    show_query = True, 
                    sort = '', 
                    timestamp = '', 
                    total_documents = 56, 
                    total_pages = 56, 
                    warnings = [
                        ''
                        ], ),
                data = [
                    vulncheck_sdk.models.advisory/microsoft_cvrf.advisory.MicrosoftCVRF(
                        cve = [
                            ''
                            ], 
                        cvrf = vulncheck_sdk.models.advisory/mscvrf.advisory.MSCVRF(
                            document_title = vulncheck_sdk.models.advisory/ms_document_title.advisory.MSDocumentTitle(
                                value = '', ), 
                            document_tracking = vulncheck_sdk.models.advisory/m_document_tracking.advisory.MDocumentTracking(
                                current_release_date = '', 
                                initial_release_date = '', 
                                identification = vulncheck_sdk.models.advisory/m_identification.advisory.MIdentification(
                                    alias = vulncheck_sdk.models.advisory/i_val.advisory.IVal(
                                        value = '', ), 
                                    id = vulncheck_sdk.models.advisory/i_val.advisory.IVal(
                                        value = '', ), ), 
                                revisionhistory = [
                                    vulncheck_sdk.models.advisory/r_revision.advisory.RRevision(
                                        date = '', 
                                        description = vulncheck_sdk.models.advisory/r_description.advisory.RDescription(
                                            value = '', ), 
                                        number = '', )
                                    ], 
                                status = 56, 
                                version = '', ), 
                            product_tree = vulncheck_sdk.models.advisory/m_product_tree.advisory.MProductTree(
                                branch = [
                                    vulncheck_sdk.models.advisory/m_branch.advisory.MBranch(
                                        full_product_name = [
                                            vulncheck_sdk.models.advisory/m_full_product_name.advisory.MFullProductName(
                                                cpe = '', 
                                                product_id = '', 
                                                value = '', )
                                            ], 
                                        items = [
                                            vulncheck_sdk.models.advisory/m_item.advisory.MItem(
                                                name = '', 
                                                product_id = '', 
                                                type = 56, 
                                                value = '', )
                                            ], 
                                        name = '', 
                                        type = 56, )
                                    ], 
                                full_product_name = [
                                    vulncheck_sdk.models.advisory/m_full_product_name.advisory.MFullProductName(
                                        cpe = '', 
                                        product_id = '', 
                                        value = '', )
                                    ], ), 
                            document_type = '', 
                            documentnotes = [
                                vulncheck_sdk.models.advisory/r_note.advisory.RNote(
                                    audience = '', 
                                    ordinal = '', 
                                    text = '', 
                                    title = '', 
                                    type = 56, )
                                ], 
                            documentpublisher = vulncheck_sdk.models.advisory/document_publisher.advisory.DocumentPublisher(
                                contact_details = '', 
                                issuing_authority = '', 
                                type = 56, ), 
                            vulnerability = [
                                vulncheck_sdk.models.advisory/m_vulnerability.advisory.MVulnerability(
                                    product_statuses = [
                                        vulncheck_sdk.models.advisory/m_product_status.advisory.MProductStatus(
                                            product_id = [
                                                ''
                                                ], 
                                            type = 56, )
                                        ], 
                                    remediations = [
                                        vulncheck_sdk.models.advisory/m_remediation.advisory.MRemediation(
                                            affected_files = [
                                                vulncheck_sdk.models.advisory/affected_file.advisory.AffectedFile(
                                                    file_last_modified = '', 
                                                    file_name = '', )
                                                ], 
                                            date = '', 
                                            date_specified = True, 
                                            description = , 
                                            fixed_build = '', 
                                            restart_required = , 
                                            sub_type = '', 
                                            type = 56, 
                                            url = '', 
                                            supercedence = '', )
                                        ], 
                                    threats = [
                                        vulncheck_sdk.models.advisory/r_threat.advisory.RThreat(
                                            date = '', 
                                            date_specified = True, 
                                            type = 56, )
                                        ], 
                                    acknowledgments = [
                                        vulncheck_sdk.models.advisory/acknowledgement.advisory.Acknowledgement(
                                            name = [
                                                
                                                ], 
                                            url = [
                                                ''
                                                ], )
                                        ], 
                                    cvssscoresets = [
                                        vulncheck_sdk.models.advisory/r_score_set.advisory.RScoreSet(
                                            base_score = '', 
                                            product_id = '', 
                                            temporal_score = '', 
                                            vector = '', )
                                        ], 
                                    notes = [
                                        vulncheck_sdk.models.advisory/note.advisory.Note(
                                            ordinal = '', 
                                            text = '', 
                                            title = '', 
                                            type = 56, )
                                        ], 
                                    ordinal = '', 
                                    title = , )
                                ], ), 
                        date_added = '', 
                        exploited_list = [
                            vulncheck_sdk.models.advisory/itw.advisory.ITW(
                                date_added = '', )
                            ], 
                        title = '', 
                        updated_at = '', 
                        url = '', )
                    ]
            )
        else:
            return RenderResponseWithMetadataArrayAdvisoryMicrosoftCVRFPaginatePagination(
        )
        """

    def testRenderResponseWithMetadataArrayAdvisoryMicrosoftCVRFPaginatePagination(self):
        """Test RenderResponseWithMetadataArrayAdvisoryMicrosoftCVRFPaginatePagination"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
