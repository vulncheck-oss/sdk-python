# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_anchore_nvd_override import AdvisoryAnchoreNVDOverride

class TestAdvisoryAnchoreNVDOverride(unittest.TestCase):
    """AdvisoryAnchoreNVDOverride unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryAnchoreNVDOverride:
        """Test AdvisoryAnchoreNVDOverride
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryAnchoreNVDOverride`
        """
        model = AdvisoryAnchoreNVDOverride()
        if include_optional:
            return AdvisoryAnchoreNVDOverride(
                cve = [
                    ''
                    ],
                date_added = '',
                override = vulncheck_sdk.models.advisory/override.advisory.Override(
                    _annotation = vulncheck_sdk.models.advisory/override_annotation.advisory.OverrideAnnotation(
                        cve_id = '', 
                        modified = '', 
                        published = '', 
                        reason = '', 
                        snapshot = '', 
                        triage_notes = vulncheck_sdk.models.advisory/triage_notes.advisory.TriageNotes(
                            references = [
                                ''
                                ], ), ), 
                    cve = vulncheck_sdk.models.advisory/override_cve.advisory.OverrideCVE(
                        configurations = [
                            vulncheck_sdk.models.advisory/override_configuration.advisory.OverrideConfiguration(
                                nodes = [
                                    vulncheck_sdk.models.advisory/cpe_node.advisory.CPENode(
                                        cpe_match = [
                                            vulncheck_sdk.models.advisory/cpe_match.advisory.CPEMatch(
                                                criteria = '', 
                                                match_criteria_id = '', 
                                                vulnerable = True, )
                                            ], 
                                        negate = True, 
                                        operator = '', )
                                    ], )
                            ], ), ),
                url = ''
            )
        else:
            return AdvisoryAnchoreNVDOverride(
        )
        """

    def testAdvisoryAnchoreNVDOverride(self):
        """Test AdvisoryAnchoreNVDOverride"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
