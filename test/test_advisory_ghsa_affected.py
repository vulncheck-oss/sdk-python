# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_ghsa_affected import AdvisoryGHSAAffected

class TestAdvisoryGHSAAffected(unittest.TestCase):
    """AdvisoryGHSAAffected unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryGHSAAffected:
        """Test AdvisoryGHSAAffected
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryGHSAAffected`
        """
        model = AdvisoryGHSAAffected()
        if include_optional:
            return AdvisoryGHSAAffected(
                ecosystem_specific = vulncheck_sdk.models.advisory/ghsa_eco_system_specific.advisory.GHSAEcoSystemSpecific(
                    affected_functions = [
                        ''
                        ], ),
                package = vulncheck_sdk.models.advisory/ghsa_package.advisory.GHSAPackage(
                    ecosystem = '', 
                    name = '', ),
                ranges = [
                    vulncheck_sdk.models.advisory/ghsa_range.advisory.GHSARange(
                        events = [
                            vulncheck_sdk.models.advisory/ghsa_event.advisory.GHSAEvent(
                                fixed = '', 
                                introduced = '', )
                            ], 
                        type = '', )
                    ]
            )
        else:
            return AdvisoryGHSAAffected(
        )
        """

    def testAdvisoryGHSAAffected(self):
        """Test AdvisoryGHSAAffected"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
