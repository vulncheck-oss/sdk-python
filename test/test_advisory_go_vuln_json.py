# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_go_vuln_json import AdvisoryGoVulnJSON

class TestAdvisoryGoVulnJSON(unittest.TestCase):
    """AdvisoryGoVulnJSON unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryGoVulnJSON:
        """Test AdvisoryGoVulnJSON
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryGoVulnJSON`
        """
        model = AdvisoryGoVulnJSON()
        if include_optional:
            return AdvisoryGoVulnJSON(
                advisory_url = '',
                affected = [
                    vulncheck_sdk.models.advisory/go_vuln_affected.advisory.GoVulnAffected(
                        database_specific = vulncheck_sdk.models.advisory/go_vuln_database_specific.advisory.GoVulnDatabaseSpecific(
                            url = '', ), 
                        ecosystem_specific = vulncheck_sdk.models.advisory/go_vuln_ecosystem_specific.advisory.GoVulnEcosystemSpecific(
                            imports = [
                                vulncheck_sdk.models.advisory/go_vuln_import.advisory.GoVulnImport(
                                    path = '', 
                                    symbols = [
                                        ''
                                        ], )
                                ], ), 
                        package = vulncheck_sdk.models.advisory/go_vuln_package.advisory.GoVulnPackage(
                            ecosystem = '', 
                            name = '', ), 
                        ranges = [
                            vulncheck_sdk.models.advisory/go_vuln_ranges.advisory.GoVulnRanges(
                                events = [
                                    vulncheck_sdk.models.advisory/go_event.advisory.GoEvent(
                                        fixed = '', 
                                        introduced = '', )
                                    ], 
                                type = '', )
                            ], )
                    ],
                aliases = [
                    ''
                    ],
                credits = [
                    vulncheck_sdk.models.advisory/go_credits.advisory.GoCredits(
                        name = '', )
                    ],
                cve = [
                    ''
                    ],
                date_added = '',
                details = '',
                ghsa = [
                    ''
                    ],
                go_advisory_id = '',
                modified = '',
                published = '',
                references = [
                    vulncheck_sdk.models.advisory/go_vuln_reference.advisory.GoVulnReference(
                        type = '', 
                        url = '', )
                    ]
            )
        else:
            return AdvisoryGoVulnJSON(
        )
        """

    def testAdvisoryGoVulnJSON(self):
        """Test AdvisoryGoVulnJSON"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
