# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_jvn_advisory_item import AdvisoryJVNAdvisoryItem

class TestAdvisoryJVNAdvisoryItem(unittest.TestCase):
    """AdvisoryJVNAdvisoryItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryJVNAdvisoryItem:
        """Test AdvisoryJVNAdvisoryItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryJVNAdvisoryItem`
        """
        model = AdvisoryJVNAdvisoryItem()
        if include_optional:
            return AdvisoryJVNAdvisoryItem(
                cpe = [
                    vulncheck_sdk.models.advisory/jvncpe.advisory.JVNCPE(
                        cpe = '', 
                        product = '', 
                        vendor = '', 
                        version = '', )
                    ],
                cve = [
                    ''
                    ],
                cvss = [
                    vulncheck_sdk.models.advisory/cvss.advisory.CVSS(
                        score = '', 
                        severity = '', 
                        type = '', 
                        vector = '', 
                        version = '', )
                    ],
                date_added = '',
                description = '',
                description_en = '',
                identifier = '',
                issued = '',
                modified = '',
                references = [
                    vulncheck_sdk.models.advisory/jvn_reference.advisory.JVNReference(
                        id = '', 
                        source = '', 
                        title = '', )
                    ],
                title = '',
                title_en = '',
                updated_at = '',
                url = '',
                url_en = ''
            )
        else:
            return AdvisoryJVNAdvisoryItem(
        )
        """

    def testAdvisoryJVNAdvisoryItem(self):
        """Test AdvisoryJVNAdvisoryItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
