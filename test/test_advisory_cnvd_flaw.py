# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_cnvd_flaw import AdvisoryCNVDFlaw

class TestAdvisoryCNVDFlaw(unittest.TestCase):
    """AdvisoryCNVDFlaw unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryCNVDFlaw:
        """Test AdvisoryCNVDFlaw
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryCNVDFlaw`
        """
        model = AdvisoryCNVDFlaw()
        if include_optional:
            return AdvisoryCNVDFlaw(
                affected_products_cn = '',
                bugtraq_id = '',
                cnvd = '',
                collection_time = '',
                cve = [
                    ''
                    ],
                date_added = '',
                harm_level = '',
                id = '',
                public_date = '',
                reference_urls = [
                    ''
                    ],
                submission_time = '',
                title_cn = '',
                update_time = '',
                updated_at = '',
                url = '',
                validation_info_cn = '',
                validation_info_en = '',
                vendor_patch_cn = '',
                vuln_attachments = [
                    ''
                    ],
                vuln_description_cn = '',
                vuln_solution_cn = '',
                vuln_type_cn = ''
            )
        else:
            return AdvisoryCNVDFlaw(
        )
        """

    def testAdvisoryCNVDFlaw(self):
        """Test AdvisoryCNVDFlaw"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
