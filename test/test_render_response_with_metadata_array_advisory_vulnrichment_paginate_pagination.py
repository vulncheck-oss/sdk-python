# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.render_response_with_metadata_array_advisory_vulnrichment_paginate_pagination import RenderResponseWithMetadataArrayAdvisoryVulnrichmentPaginatePagination

class TestRenderResponseWithMetadataArrayAdvisoryVulnrichmentPaginatePagination(unittest.TestCase):
    """RenderResponseWithMetadataArrayAdvisoryVulnrichmentPaginatePagination unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RenderResponseWithMetadataArrayAdvisoryVulnrichmentPaginatePagination:
        """Test RenderResponseWithMetadataArrayAdvisoryVulnrichmentPaginatePagination
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RenderResponseWithMetadataArrayAdvisoryVulnrichmentPaginatePagination`
        """
        model = RenderResponseWithMetadataArrayAdvisoryVulnrichmentPaginatePagination()
        if include_optional:
            return RenderResponseWithMetadataArrayAdvisoryVulnrichmentPaginatePagination(
                benchmark = 1.337,
                meta = vulncheck_sdk.models.paginate/pagination.paginate.Pagination(
                    cursor = '', 
                    first_item = 56, 
                    index = '', 
                    last_item = 56, 
                    limit = 56, 
                    matches = [
                        vulncheck_sdk.models.paginate/match.paginate.Match(
                            field = '', 
                            value = '', )
                        ], 
                    max_pages = 56, 
                    next_cursor = '', 
                    opensearch_query = vulncheck_sdk.models.opensearch_query.opensearch_query(), 
                    order = '', 
                    page = 56, 
                    pages = [
                        ''
                        ], 
                    parameters = [
                        vulncheck_sdk.models.paginate/param.paginate.Param(
                            filtering = '', 
                            format = '', 
                            name = '', )
                        ], 
                    show_pages = True, 
                    show_query = True, 
                    sort = '', 
                    timestamp = '', 
                    total_documents = 56, 
                    total_pages = 56, 
                    warnings = [
                        ''
                        ], ),
                data = [
                    vulncheck_sdk.models.advisory/vulnrichment.advisory.Vulnrichment(
                        cve = [
                            ''
                            ], 
                        date_added = '', 
                        mitre_ref = vulncheck_sdk.models.advisory/vulnrichment_cve_ref.advisory.VulnrichmentCVERef(
                            containers = vulncheck_sdk.models.advisory/vulnrichment_containers.advisory.VulnrichmentContainers(
                                adp = [
                                    vulncheck_sdk.models.advisory/adp.advisory.ADP(
                                        affected = [
                                            vulncheck_sdk.models.advisory/m_affected.advisory.MAffected(
                                                collection_url = '', 
                                                cpes = [
                                                    ''
                                                    ], 
                                                default_status = '', 
                                                package_name = '', 
                                                platforms = [
                                                    ''
                                                    ], 
                                                product = '', 
                                                repos = '', 
                                                vendor = '', 
                                                versions = [
                                                    vulncheck_sdk.models.advisory/m_version.advisory.MVersion(
                                                        less_than = '', 
                                                        less_than_or_equal = '', 
                                                        status = '', 
                                                        version = '', 
                                                        version_type = '', )
                                                    ], )
                                            ], 
                                        metrics = [
                                            vulncheck_sdk.models.advisory/vulnrichment_metric.advisory.VulnrichmentMetric(
                                                other = vulncheck_sdk.models.advisory/vulnrichment_other.advisory.VulnrichmentOther(
                                                    content = vulncheck_sdk.models.advisory/vulnrichment_content.advisory.VulnrichmentContent(
                                                        id = '', 
                                                        options = [
                                                            vulncheck_sdk.models.advisory/vulnrichment_option.advisory.VulnrichmentOption(
                                                                automatable = '', 
                                                                exploitation = '', 
                                                                technical_impact = '', )
                                                            ], 
                                                        role = '', 
                                                        timestamp = '', 
                                                        version = '', ), 
                                                    type = '', ), )
                                            ], 
                                        provider_metadata = vulncheck_sdk.models.advisory/m_provider_metadata.advisory.MProviderMetadata(
                                            date_updated = '', 
                                            org_id = '', 
                                            short_name = '', ), )
                                    ], 
                                cna = vulncheck_sdk.models.advisory/m_cna.advisory.MCna(
                                    cpe_applicability = [
                                        vulncheck_sdk.models.advisory/mcpe_applicability.advisory.MCPEApplicability(
                                            negate = True, 
                                            nodes = [
                                                vulncheck_sdk.models.advisory/m_nodes.advisory.MNodes(
                                                    cpe_match = [
                                                        vulncheck_sdk.models.advisory/mcpe_match.advisory.MCPEMatch(
                                                            criteria = '', 
                                                            match_criteria_id = '', 
                                                            version_end_excluding = '', 
                                                            version_end_including = '', 
                                                            version_start_excluding = '', 
                                                            version_start_including = '', 
                                                            vulnerable = True, )
                                                        ], 
                                                    negate = True, 
                                                    operator = '', )
                                                ], 
                                            operator = '', )
                                        ], 
                                    credits = [
                                        vulncheck_sdk.models.advisory/credit.advisory.Credit(
                                            lang = '', 
                                            type = '', 
                                            value = '', )
                                        ], 
                                    descriptions = [
                                        vulncheck_sdk.models.advisory/m_descriptions.advisory.MDescriptions(
                                            lang = '', 
                                            value = '', )
                                        ], 
                                    impacts = [
                                        vulncheck_sdk.models.advisory/impact.advisory.Impact(
                                            capec_id = '', )
                                        ], 
                                    problem_types = [
                                        vulncheck_sdk.models.advisory/m_problem_types.advisory.MProblemTypes()
                                        ], 
                                    references = [
                                        vulncheck_sdk.models.advisory/m_reference.advisory.MReference(
                                            name = '', 
                                            tags = [
                                                ''
                                                ], 
                                            url = '', )
                                        ], 
                                    tags = [
                                        ''
                                        ], 
                                    timeline = [
                                        vulncheck_sdk.models.advisory/timeline.advisory.Timeline(
                                            lang = '', 
                                            time = '', 
                                            value = '', )
                                        ], 
                                    title = '', ), ), 
                            cve_metadata = vulncheck_sdk.models.advisory/m_cve_metadata.advisory.MCveMetadata(
                                assigner_org_id = '', 
                                assigner_short_name = '', 
                                cve_id = '', 
                                date_published = '', 
                                date_reserved = '', 
                                date_updated = '', 
                                state = '', ), 
                            data_type = '', 
                            data_version = '', ), 
                        url = '', )
                    ]
            )
        else:
            return RenderResponseWithMetadataArrayAdvisoryVulnrichmentPaginatePagination(
        )
        """

    def testRenderResponseWithMetadataArrayAdvisoryVulnrichmentPaginatePagination(self):
        """Test RenderResponseWithMetadataArrayAdvisoryVulnrichmentPaginatePagination"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
