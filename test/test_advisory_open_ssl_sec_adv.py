# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_open_ssl_sec_adv import AdvisoryOpenSSLSecAdv

class TestAdvisoryOpenSSLSecAdv(unittest.TestCase):
    """AdvisoryOpenSSLSecAdv unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryOpenSSLSecAdv:
        """Test AdvisoryOpenSSLSecAdv
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryOpenSSLSecAdv`
        """
        model = AdvisoryOpenSSLSecAdv()
        if include_optional:
            return AdvisoryOpenSSLSecAdv(
                cve = [
                    ''
                    ],
                date_added = '',
                date_updated = '',
                description = '',
                filename = '',
                references = [
                    ''
                    ],
                title = '',
                url = '',
                vulnerabilities = [
                    vulncheck_sdk.models.advisory/open_ssl_vulnerability.advisory.OpenSSLVulnerability(
                        cve = [
                            ''
                            ], 
                        fixed = [
                            vulncheck_sdk.models.advisory/fix_aff.advisory.FixAff(
                                affected_since = '', 
                                fixed_version = '', 
                                patch_url = '', )
                            ], 
                        severity = '', 
                        title = '', )
                    ]
            )
        else:
            return AdvisoryOpenSSLSecAdv(
        )
        """

    def testAdvisoryOpenSSLSecAdv(self):
        """Test AdvisoryOpenSSLSecAdv"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
