# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.api_vuln_check_canary import ApiVulnCheckCanary

class TestApiVulnCheckCanary(unittest.TestCase):
    """ApiVulnCheckCanary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiVulnCheckCanary:
        """Test ApiVulnCheckCanary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiVulnCheckCanary`
        """
        model = ApiVulnCheckCanary()
        if include_optional:
            return ApiVulnCheckCanary(
                category = '',
                client_fingerprints = vulncheck_sdk.models.api/client_fingerprints.api.ClientFingerprints(
                    hassh = '', 
                    ja3 = '', 
                    ja4 = '', ),
                cve = '',
                dst_country = '',
                http = vulncheck_sdk.models.api/http_details.api.HTTPDetails(
                    http_request_body = '', 
                    http_user_agent = '', 
                    method = '', 
                    protocol = '', 
                    url = '', ),
                severity = 56,
                signature = '',
                signature_id = 56,
                src_country = '',
                src_ip = [
                    56
                    ],
                src_port = 56,
                timestamp = ''
            )
        else:
            return ApiVulnCheckCanary(
        )
        """

    def testApiVulnCheckCanary(self):
        """Test ApiVulnCheckCanary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
