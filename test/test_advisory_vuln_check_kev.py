# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_vuln_check_kev import AdvisoryVulnCheckKEV

class TestAdvisoryVulnCheckKEV(unittest.TestCase):
    """AdvisoryVulnCheckKEV unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryVulnCheckKEV:
        """Test AdvisoryVulnCheckKEV
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryVulnCheckKEV`
        """
        model = AdvisoryVulnCheckKEV()
        if include_optional:
            return AdvisoryVulnCheckKEV(
                timestamp = '',
                cisa_date_added = '',
                cve = [
                    ''
                    ],
                cwes = [
                    ''
                    ],
                date_added = '',
                due_date = '',
                known_ransomware_campaign_use = '',
                product = '',
                required_action = '',
                short_description = '',
                vendor_project = '',
                vulncheck_reported_exploitation = [
                    vulncheck_sdk.models.advisory/reported_exploit.advisory.ReportedExploit(
                        date_added = '', 
                        url = '', )
                    ],
                vulncheck_xdb = [
                    vulncheck_sdk.models.advisory/xdb.advisory.XDB(
                        clone_ssh_url = '', 
                        date_added = '', 
                        exploit_type = '', 
                        xdb_id = '', 
                        xdb_url = '', )
                    ],
                vulnerability_name = ''
            )
        else:
            return AdvisoryVulnCheckKEV(
        )
        """

    def testAdvisoryVulnCheckKEV(self):
        """Test AdvisoryVulnCheckKEV"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
