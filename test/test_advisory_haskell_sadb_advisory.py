# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_haskell_sadb_advisory import AdvisoryHaskellSADBAdvisory

class TestAdvisoryHaskellSADBAdvisory(unittest.TestCase):
    """AdvisoryHaskellSADBAdvisory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryHaskellSADBAdvisory:
        """Test AdvisoryHaskellSADBAdvisory
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryHaskellSADBAdvisory`
        """
        model = AdvisoryHaskellSADBAdvisory()
        if include_optional:
            return AdvisoryHaskellSADBAdvisory(
                advisory_id = '',
                affected_packages = [
                    vulncheck_sdk.models.advisory/haskell_affected.advisory.HaskellAffected(
                        affected_constraint = '', 
                        affected_versions = [
                            vulncheck_sdk.models.advisory/haskell_version.advisory.HaskellVersion(
                                fixed = '', 
                                introduced = '', )
                            ], 
                        arch = [
                            ''
                            ], 
                        cvss = '', 
                        os = [
                            ''
                            ], 
                        package = '', )
                    ],
                aliases = [
                    ''
                    ],
                cve = [
                    ''
                    ],
                cwes = [
                    56
                    ],
                date_added = '',
                keywords = [
                    ''
                    ],
                references = {
                    'key' : [
                        ''
                        ]
                    },
                related_vulns = [
                    ''
                    ]
            )
        else:
            return AdvisoryHaskellSADBAdvisory(
        )
        """

    def testAdvisoryHaskellSADBAdvisory(self):
        """Test AdvisoryHaskellSADBAdvisory"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
