# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_euvd import AdvisoryEUVD

class TestAdvisoryEUVD(unittest.TestCase):
    """AdvisoryEUVD unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryEUVD:
        """Test AdvisoryEUVD
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryEUVD`
        """
        model = AdvisoryEUVD()
        if include_optional:
            return AdvisoryEUVD(
                aliases = [
                    ''
                    ],
                assigner = '',
                base_score = 1.337,
                base_score_vector = '',
                base_score_version = '',
                cve = [
                    ''
                    ],
                date_added = '',
                date_updated = '',
                description = '',
                enisa_id_product = [
                    vulncheck_sdk.models.advisory/enisa_id_product.advisory.EnisaIDProduct(
                        id = '', 
                        product_name = '', 
                        product_version = '', )
                    ],
                enisa_id_vendor = [
                    vulncheck_sdk.models.advisory/enisa_id_vendor.advisory.EnisaIDVendor(
                        id = '', 
                        vendor_name = '', )
                    ],
                epss = 1.337,
                exploited = True,
                exploited_since = '',
                id = '',
                references = [
                    ''
                    ],
                url = ''
            )
        else:
            return AdvisoryEUVD(
        )
        """

    def testAdvisoryEUVD(self):
        """Test AdvisoryEUVD"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
