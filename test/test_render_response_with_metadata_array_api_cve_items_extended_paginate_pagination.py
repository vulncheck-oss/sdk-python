# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.render_response_with_metadata_array_api_cve_items_extended_paginate_pagination import RenderResponseWithMetadataArrayApiCveItemsExtendedPaginatePagination

class TestRenderResponseWithMetadataArrayApiCveItemsExtendedPaginatePagination(unittest.TestCase):
    """RenderResponseWithMetadataArrayApiCveItemsExtendedPaginatePagination unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RenderResponseWithMetadataArrayApiCveItemsExtendedPaginatePagination:
        """Test RenderResponseWithMetadataArrayApiCveItemsExtendedPaginatePagination
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RenderResponseWithMetadataArrayApiCveItemsExtendedPaginatePagination`
        """
        model = RenderResponseWithMetadataArrayApiCveItemsExtendedPaginatePagination()
        if include_optional:
            return RenderResponseWithMetadataArrayApiCveItemsExtendedPaginatePagination(
                benchmark = 1.337,
                meta = vulncheck_sdk.models.paginate/pagination.paginate.Pagination(
                    cursor = '', 
                    first_item = 56, 
                    index = '', 
                    last_item = 56, 
                    limit = 56, 
                    matches = [
                        vulncheck_sdk.models.paginate/match.paginate.Match(
                            field = '', 
                            value = '', )
                        ], 
                    max_pages = 56, 
                    next_cursor = '', 
                    opensearch_query = vulncheck_sdk.models.opensearch_query.opensearch_query(), 
                    order = '', 
                    page = 56, 
                    pages = [
                        ''
                        ], 
                    parameters = [
                        vulncheck_sdk.models.paginate/param.paginate.Param(
                            filtering = '', 
                            format = '', 
                            name = '', )
                        ], 
                    show_pages = True, 
                    show_query = True, 
                    sort = '', 
                    timestamp = '', 
                    total_documents = 56, 
                    total_pages = 56, 
                    warnings = [
                        ''
                        ], ),
                data = [
                    vulncheck_sdk.models.api/cve_items_extended.api.CveItemsExtended(
                        _timestamp = '', 
                        configurations = vulncheck_sdk.models.api/configurations.api.Configurations(
                            cve_data_version = '', 
                            nodes = [
                                vulncheck_sdk.models.api/nodes.api.Nodes(
                                    children = [
                                        vulncheck_sdk.models.api/nodes.api.Nodes(
                                            cpe_match = [
                                                vulncheck_sdk.models.api/cpe_match.api.CPEMatch(
                                                    cpe22_uri = '', 
                                                    cpe23_uri = '', 
                                                    cpe_name = [
                                                        vulncheck_sdk.models.api/cpe_name.api.CPEName(
                                                            cpe22_uri = '', 
                                                            cpe23_uri = '', 
                                                            last_modified_date = '', )
                                                        ], 
                                                    version_end_excluding = '', 
                                                    version_end_including = '', 
                                                    version_start_excluding = '', 
                                                    version_start_including = '', 
                                                    vulnerable = True, )
                                                ], 
                                            operator = '', )
                                        ], 
                                    cpe_match = [
                                        vulncheck_sdk.models.api/cpe_match.api.CPEMatch(
                                            cpe22_uri = '', 
                                            cpe23_uri = '', 
                                            version_end_excluding = '', 
                                            version_end_including = '', 
                                            version_start_excluding = '', 
                                            version_start_including = '', 
                                            vulnerable = True, )
                                        ], 
                                    operator = '', )
                                ], ), 
                        cve = vulncheck_sdk.models.api/cve_extended.api.CVEExtended(
                            cve_data_meta = vulncheck_sdk.models.api/cve_data_meta_extended.api.CVEDataMetaExtended(
                                alias = '', 
                                assigner = '', 
                                id = '', 
                                status = '', ), 
                            categorization = vulncheck_sdk.models.api/categorization_extended.api.CategorizationExtended(
                                tags = [
                                    ''
                                    ], ), 
                            data_format = '', 
                            data_type = '', 
                            data_version = '', 
                            description = vulncheck_sdk.models.api/description.api.Description(
                                description_data = [
                                    vulncheck_sdk.models.api/description_data.api.DescriptionData(
                                        lang = '', 
                                        value = '', )
                                    ], ), 
                            problemtype = vulncheck_sdk.models.api/problem_type_extended.api.ProblemTypeExtended(
                                problemtype_data = [
                                    vulncheck_sdk.models.api/problem_type_data_extended.api.ProblemTypeDataExtended()
                                    ], ), 
                            references = vulncheck_sdk.models.api/references_extended.api.ReferencesExtended(
                                reference_data = [
                                    vulncheck_sdk.models.api/reference_data_extended.api.ReferenceDataExtended(
                                        date_added = '', 
                                        external_id = '', 
                                        lang = '', 
                                        name = '', 
                                        previous_url = '', 
                                        refsource = '', 
                                        status = '', 
                                        url = '', )
                                    ], ), ), 
                        date_added = '', 
                        document_generation_date = '', 
                        impact = vulncheck_sdk.models.api/impact_extended.api.ImpactExtended(
                            base_metric_v2 = vulncheck_sdk.models.api/base_metric_v2.api.BaseMetricV2(
                                ac_insuf_info = True, 
                                cvss_v2 = vulncheck_sdk.models.api/cvssv2.api.CVSSV2(
                                    access_complexity = '', 
                                    access_vector = '', 
                                    authentication = '', 
                                    availability_impact = '', 
                                    base_score = 1.337, 
                                    confidentiality_impact = '', 
                                    integrity_impact = '', 
                                    vector_string = '', 
                                    version = '', ), 
                                exploitability_score = 1.337, 
                                impact_score = 1.337, 
                                obtain_all_privilege = True, 
                                obtain_other_privilege = True, 
                                obtain_user_privilege = True, 
                                severity = '', 
                                user_interaction_required = True, ), 
                            base_metric_v3 = vulncheck_sdk.models.api/base_metric_v3.api.BaseMetricV3(
                                cvss_v3 = vulncheck_sdk.models.api/cvssv3.api.CVSSV3(
                                    attack_complexity = '', 
                                    attack_vector = '', 
                                    availability_impact = '', 
                                    base_score = 1.337, 
                                    base_severity = '', 
                                    confidentiality_impact = '', 
                                    integrity_impact = '', 
                                    privileges_required = '', 
                                    scope = '', 
                                    user_interaction = '', 
                                    vector_string = '', 
                                    version = '', ), 
                                exploitability_score = 1.337, 
                                impact_score = 1.337, ), 
                            corrected_base_metric_v3 = vulncheck_sdk.models.api/base_metric_v3.api.BaseMetricV3(
                                exploitability_score = 1.337, 
                                impact_score = 1.337, ), 
                            epss = vulncheck_sdk.models.api/epss.api.EPSS(
                                epss_percentile = 1.337, 
                                epss_score = 1.337, 
                                last_modified = '', ), 
                            metric_v40 = vulncheck_sdk.models.advisory/cvssv40.advisory.CVSSV40(
                                automatable = '', 
                                recovery = '', 
                                safety = '', 
                                attack_complexity = '', 
                                attack_requirements = '', 
                                attack_vector = '', 
                                availability_requirement = '', 
                                base_score = 1.337, 
                                base_severity = '', 
                                confidentiality_requirement = '', 
                                exploit_maturity = '', 
                                integrity_requirement = '', 
                                modified_attack_complexity = '', 
                                modified_attack_requirements = '', 
                                modified_attack_vector = '', 
                                modified_privileges_required = '', 
                                modified_sub_availability_impact = '', 
                                modified_sub_confidentiality_impact = '', 
                                modified_sub_integrity_impact = '', 
                                modified_user_interaction = '', 
                                modified_vuln_availability_impact = '', 
                                modified_vuln_confidentiality_impact = '', 
                                modified_vuln_integrity_impact = '', 
                                privileges_required = '', 
                                provider_urgency = '', 
                                sub_availability_impact = '', 
                                sub_confidentiality_impact = '', 
                                sub_integrity_impact = '', 
                                user_interaction = '', 
                                value_density = '', 
                                vector_string = '', 
                                version = '', 
                                vuln_availability_impact = '', 
                                vuln_confidentiality_impact = '', 
                                vuln_integrity_impact = '', 
                                vulnerability_response_effort = '', ), 
                            ssvc = [
                                vulncheck_sdk.models.api/ssvc.api.SSVC(
                                    automatable = '', 
                                    exploitation = '', 
                                    source = '', 
                                    technical_impact = '', )
                                ], 
                            temporal_metric_v2 = vulncheck_sdk.models.api/temporal_metric_v2.api.TemporalMetricV2(), 
                            temporal_metric_v3 = vulncheck_sdk.models.api/temporal_metric_v3.api.TemporalMetricV3(), 
                            temporal_v3_corrected = vulncheck_sdk.models.api/temporal_metric_v3.api.TemporalMetricV3(), 
                            threat_metric_v40 = vulncheck_sdk.models.advisory/cvssv40_threat.advisory.CVSSV40Threat(
                                base_threat_score = 1.337, 
                                base_threat_severity = '', 
                                exploit_maturity = '', ), ), 
                        last_modified_date = '', 
                        mitre_attack_techniques = [
                            vulncheck_sdk.models.api/mitre_attack_tech.api.MitreAttackTech(
                                domain = '', 
                                id = '', 
                                name = '', 
                                subtechnique = True, 
                                tactics = [
                                    ''
                                    ], 
                                url = '', )
                            ], 
                        published_date = '', 
                        related_attack_patterns = [
                            vulncheck_sdk.models.api/related_attack_pattern.api.RelatedAttackPattern(
                                capec_id = '', 
                                capec_name = '', 
                                capec_url = '', 
                                lang = '', )
                            ], 
                        vc_configurations = vulncheck_sdk.models.api/configurations.api.Configurations(
                            cve_data_version = '', ), 
                        vc_vulnerable_cpes = [
                            ''
                            ], 
                        vulnerable_cpes = [
                            ''
                            ], )
                    ]
            )
        else:
            return RenderResponseWithMetadataArrayApiCveItemsExtendedPaginatePagination(
        )
        """

    def testRenderResponseWithMetadataArrayApiCveItemsExtendedPaginatePagination(self):
        """Test RenderResponseWithMetadataArrayApiCveItemsExtendedPaginatePagination"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
