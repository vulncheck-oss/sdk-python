# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.render_response_with_metadata_array_advisory_mitre_cve_list_v5_paginate_pagination import RenderResponseWithMetadataArrayAdvisoryMitreCVEListV5PaginatePagination

class TestRenderResponseWithMetadataArrayAdvisoryMitreCVEListV5PaginatePagination(unittest.TestCase):
    """RenderResponseWithMetadataArrayAdvisoryMitreCVEListV5PaginatePagination unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RenderResponseWithMetadataArrayAdvisoryMitreCVEListV5PaginatePagination:
        """Test RenderResponseWithMetadataArrayAdvisoryMitreCVEListV5PaginatePagination
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RenderResponseWithMetadataArrayAdvisoryMitreCVEListV5PaginatePagination`
        """
        model = RenderResponseWithMetadataArrayAdvisoryMitreCVEListV5PaginatePagination()
        if include_optional:
            return RenderResponseWithMetadataArrayAdvisoryMitreCVEListV5PaginatePagination(
                benchmark = 1.337,
                meta = vulncheck_sdk.models.paginate/pagination.paginate.Pagination(
                    cursor = '', 
                    first_item = 56, 
                    index = '', 
                    last_item = 56, 
                    limit = 56, 
                    matches = [
                        vulncheck_sdk.models.paginate/match.paginate.Match(
                            field = '', 
                            value = '', )
                        ], 
                    max_pages = 56, 
                    next_cursor = '', 
                    opensearch_query = vulncheck_sdk.models.opensearch_query.opensearch_query(), 
                    order = '', 
                    page = 56, 
                    pages = [
                        ''
                        ], 
                    parameters = [
                        vulncheck_sdk.models.paginate/param.paginate.Param(
                            filtering = '', 
                            format = '', 
                            name = '', )
                        ], 
                    show_pages = True, 
                    show_query = True, 
                    sort = '', 
                    timestamp = '', 
                    total_documents = 56, 
                    total_pages = 56, 
                    warnings = [
                        ''
                        ], ),
                data = [
                    vulncheck_sdk.models.advisory/mitre_cve_list_v5.advisory.MitreCVEListV5(
                        cve = [
                            ''
                            ], 
                        date_added = '', 
                        mitre_ref = vulncheck_sdk.models.advisory/mitre_cve_list_v5_ref.advisory.MitreCVEListV5Ref(
                            containers = vulncheck_sdk.models.advisory/m_containers.advisory.MContainers(
                                adp = [
                                    vulncheck_sdk.models.advisory/adp_container.advisory.ADPContainer(
                                        affected = [
                                            vulncheck_sdk.models.advisory/m_affected.advisory.MAffected(
                                                collection_url = '', 
                                                cpes = [
                                                    ''
                                                    ], 
                                                default_status = '', 
                                                package_name = '', 
                                                platforms = [
                                                    ''
                                                    ], 
                                                product = '', 
                                                repos = '', 
                                                vendor = '', 
                                                versions = [
                                                    vulncheck_sdk.models.advisory/m_version.advisory.MVersion(
                                                        less_than = '', 
                                                        less_than_or_equal = '', 
                                                        status = '', 
                                                        version = '', 
                                                        version_type = '', )
                                                    ], )
                                            ], 
                                        date_public = '', 
                                        descriptions = [
                                            vulncheck_sdk.models.advisory/m_descriptions.advisory.MDescriptions(
                                                lang = '', 
                                                value = '', )
                                            ], 
                                        impacts = [
                                            vulncheck_sdk.models.advisory/impact.advisory.Impact(
                                                capec_id = '', )
                                            ], 
                                        metrics = [
                                            vulncheck_sdk.models.advisory/metric.advisory.Metric(
                                                cvss_v2_0 = vulncheck_sdk.models.advisory/m_cvss_v20.advisory.MCvssV20(
                                                    access_vector = '', 
                                                    attack_complexity = '', 
                                                    authentication = '', 
                                                    availability_impact = '', 
                                                    base_score = 1.337, 
                                                    confidentiality_impact = '', 
                                                    integrity_impact = '', 
                                                    vector_string = '', 
                                                    version = '', ), 
                                                cvss_v3_0 = vulncheck_sdk.models.advisory/m_cvss_v30.advisory.MCvssV30(
                                                    attack_complexity = '', 
                                                    attack_vector = '', 
                                                    availability_impact = '', 
                                                    base_score = 1.337, 
                                                    base_severity = '', 
                                                    confidentiality_impact = '', 
                                                    integrity_impact = '', 
                                                    privileges_required = '', 
                                                    scope = '', 
                                                    user_interaction = '', 
                                                    vector_string = '', 
                                                    version = '', ), 
                                                cvss_v3_1 = vulncheck_sdk.models.advisory/m_cvss_v31.advisory.MCvssV31(
                                                    attack_complexity = '', 
                                                    attack_vector = '', 
                                                    availability_impact = '', 
                                                    base_score = 1.337, 
                                                    base_severity = '', 
                                                    confidentiality_impact = '', 
                                                    integrity_impact = '', 
                                                    privileges_required = '', 
                                                    scope = '', 
                                                    user_interaction = '', 
                                                    vector_string = '', 
                                                    version = '', ), 
                                                cvss_v4_0 = vulncheck_sdk.models.advisory/m_cvss_v40.advisory.MCvssV40(
                                                    automatable = '', 
                                                    recovery = '', 
                                                    safety = '', 
                                                    attack_complexity = '', 
                                                    attack_requirements = '', 
                                                    attack_vector = '', 
                                                    base_score = 1.337, 
                                                    base_severity = '', 
                                                    privileges_required = '', 
                                                    provider_urgency = '', 
                                                    sub_availability_impact = '', 
                                                    sub_confidentiality_impact = '', 
                                                    sub_integrity_impact = '', 
                                                    user_interaction = '', 
                                                    value_density = '', 
                                                    vector_string = '', 
                                                    version = '', 
                                                    vuln_availability_impact = '', 
                                                    vuln_confidentiality_impact = '', 
                                                    vuln_integrity_impact = '', 
                                                    vulnerability_response_effort = '', ), 
                                                format = '', 
                                                other = vulncheck_sdk.models.advisory/metrics_other.advisory.MetricsOther(
                                                    content = '', 
                                                    type = '', ), )
                                            ], 
                                        problem_types = [
                                            vulncheck_sdk.models.advisory/m_problem_types.advisory.MProblemTypes()
                                            ], 
                                        provider_metadata = vulncheck_sdk.models.provider_metadata.providerMetadata(), 
                                        references = [
                                            vulncheck_sdk.models.advisory/m_reference.advisory.MReference(
                                                name = '', 
                                                tags = [
                                                    ''
                                                    ], 
                                                url = '', )
                                            ], 
                                        tags = [
                                            ''
                                            ], 
                                        title = '', )
                                    ], 
                                cna = vulncheck_sdk.models.advisory/m_cna.advisory.MCna(
                                    cpe_applicability = [
                                        vulncheck_sdk.models.advisory/mcpe_applicability.advisory.MCPEApplicability(
                                            negate = True, 
                                            nodes = [
                                                vulncheck_sdk.models.advisory/m_nodes.advisory.MNodes(
                                                    cpe_match = [
                                                        vulncheck_sdk.models.advisory/mcpe_match.advisory.MCPEMatch(
                                                            criteria = '', 
                                                            match_criteria_id = '', 
                                                            version_end_excluding = '', 
                                                            version_end_including = '', 
                                                            version_start_excluding = '', 
                                                            version_start_including = '', 
                                                            vulnerable = True, )
                                                        ], 
                                                    negate = True, 
                                                    operator = '', )
                                                ], 
                                            operator = '', )
                                        ], 
                                    credits = [
                                        vulncheck_sdk.models.advisory/credit.advisory.Credit(
                                            lang = '', 
                                            type = '', 
                                            value = '', )
                                        ], 
                                    provider_metadata = vulncheck_sdk.models.advisory/m_provider_metadata.advisory.MProviderMetadata(
                                        date_updated = '', 
                                        org_id = '', 
                                        short_name = '', ), 
                                    timeline = [
                                        vulncheck_sdk.models.advisory/timeline.advisory.Timeline(
                                            lang = '', 
                                            time = '', 
                                            value = '', )
                                        ], 
                                    title = '', ), ), 
                            cve_metadata = vulncheck_sdk.models.advisory/m_cve_metadata.advisory.MCveMetadata(
                                assigner_org_id = '', 
                                assigner_short_name = '', 
                                cve_id = '', 
                                date_published = '', 
                                date_reserved = '', 
                                date_updated = '', 
                                state = '', ), 
                            data_type = '', 
                            data_version = '', ), 
                        references = [
                            ''
                            ], 
                        summary = '', 
                        title = '', 
                        updated_at = '', 
                        url = '', )
                    ]
            )
        else:
            return RenderResponseWithMetadataArrayAdvisoryMitreCVEListV5PaginatePagination(
        )
        """

    def testRenderResponseWithMetadataArrayAdvisoryMitreCVEListV5PaginatePagination(self):
        """Test RenderResponseWithMetadataArrayAdvisoryMitreCVEListV5PaginatePagination"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
