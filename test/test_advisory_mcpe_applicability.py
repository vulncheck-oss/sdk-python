# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_mcpe_applicability import AdvisoryMCPEApplicability

class TestAdvisoryMCPEApplicability(unittest.TestCase):
    """AdvisoryMCPEApplicability unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryMCPEApplicability:
        """Test AdvisoryMCPEApplicability
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryMCPEApplicability`
        """
        model = AdvisoryMCPEApplicability()
        if include_optional:
            return AdvisoryMCPEApplicability(
                negate = True,
                nodes = [
                    vulncheck_sdk.models.advisory/m_nodes.advisory.MNodes(
                        cpe_match = [
                            vulncheck_sdk.models.advisory/mcpe_match.advisory.MCPEMatch(
                                criteria = '', 
                                match_criteria_id = '', 
                                version_end_excluding = '', 
                                version_end_including = '', 
                                version_start_excluding = '', 
                                version_start_including = '', 
                                vulnerable = True, )
                            ], 
                        negate = True, 
                        operator = '', )
                    ],
                operator = ''
            )
        else:
            return AdvisoryMCPEApplicability(
        )
        """

    def testAdvisoryMCPEApplicability(self):
        """Test AdvisoryMCPEApplicability"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
